package com.paqueteria.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RepartidorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRepartidorAllPropertiesEquals(Repartidor expected, Repartidor actual) {
        assertRepartidorAutoGeneratedPropertiesEquals(expected, actual);
        assertRepartidorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRepartidorAllUpdatablePropertiesEquals(Repartidor expected, Repartidor actual) {
        assertRepartidorUpdatableFieldsEquals(expected, actual);
        assertRepartidorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRepartidorAutoGeneratedPropertiesEquals(Repartidor expected, Repartidor actual) {
        assertThat(actual)
            .as("Verify Repartidor auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRepartidorUpdatableFieldsEquals(Repartidor expected, Repartidor actual) {
        assertThat(actual)
            .as("Verify Repartidor relevant properties")
            .satisfies(a -> assertThat(a.getCi()).as("check ci").isEqualTo(expected.getCi()))
            .satisfies(a -> assertThat(a.getTelefono()).as("check telefono").isEqualTo(expected.getTelefono()))
            .satisfies(a -> assertThat(a.getDireccion()).as("check direccion").isEqualTo(expected.getDireccion()))
            .satisfies(a -> assertThat(a.getDisponible()).as("check disponible").isEqualTo(expected.getDisponible()))
            .satisfies(a -> assertThat(a.getFechaIngreso()).as("check fechaIngreso").isEqualTo(expected.getFechaIngreso()))
            .satisfies(a -> assertThat(a.getMedioTransporte()).as("check medioTransporte").isEqualTo(expected.getMedioTransporte()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRepartidorUpdatableRelationshipsEquals(Repartidor expected, Repartidor actual) {
        assertThat(actual)
            .as("Verify Repartidor relationships")
            .satisfies(a -> assertThat(a.getZona()).as("check zona").isEqualTo(expected.getZona()))
            .satisfies(a -> assertThat(a.getSucursal()).as("check sucursal").isEqualTo(expected.getSucursal()));
    }
}
