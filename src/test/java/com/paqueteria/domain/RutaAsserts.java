package com.paqueteria.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RutaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRutaAllPropertiesEquals(Ruta expected, Ruta actual) {
        assertRutaAutoGeneratedPropertiesEquals(expected, actual);
        assertRutaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRutaAllUpdatablePropertiesEquals(Ruta expected, Ruta actual) {
        assertRutaUpdatableFieldsEquals(expected, actual);
        assertRutaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRutaAutoGeneratedPropertiesEquals(Ruta expected, Ruta actual) {
        assertThat(actual)
            .as("Verify Ruta auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRutaUpdatableFieldsEquals(Ruta expected, Ruta actual) {
        assertThat(actual)
            .as("Verify Ruta relevant properties")
            .satisfies(a -> assertThat(a.getNombre()).as("check nombre").isEqualTo(expected.getNombre()))
            .satisfies(a -> assertThat(a.getDescripcion()).as("check descripcion").isEqualTo(expected.getDescripcion()))
            .satisfies(a -> assertThat(a.getActiva()).as("check activa").isEqualTo(expected.getActiva()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRutaUpdatableRelationshipsEquals(Ruta expected, Ruta actual) {
        assertThat(actual)
            .as("Verify Ruta relationships")
            .satisfies(a -> assertThat(a.getZona()).as("check zona").isEqualTo(expected.getZona()));
    }
}
