package com.paqueteria.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RecepcionistaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecepcionistaAllPropertiesEquals(Recepcionista expected, Recepcionista actual) {
        assertRecepcionistaAutoGeneratedPropertiesEquals(expected, actual);
        assertRecepcionistaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecepcionistaAllUpdatablePropertiesEquals(Recepcionista expected, Recepcionista actual) {
        assertRecepcionistaUpdatableFieldsEquals(expected, actual);
        assertRecepcionistaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecepcionistaAutoGeneratedPropertiesEquals(Recepcionista expected, Recepcionista actual) {
        assertThat(actual)
            .as("Verify Recepcionista auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecepcionistaUpdatableFieldsEquals(Recepcionista expected, Recepcionista actual) {
        assertThat(actual)
            .as("Verify Recepcionista relevant properties")
            .satisfies(a -> assertThat(a.getCi()).as("check ci").isEqualTo(expected.getCi()))
            .satisfies(a -> assertThat(a.getTelefono()).as("check telefono").isEqualTo(expected.getTelefono()))
            .satisfies(a -> assertThat(a.getDireccion()).as("check direccion").isEqualTo(expected.getDireccion()))
            .satisfies(a -> assertThat(a.getFechaIngreso()).as("check fechaIngreso").isEqualTo(expected.getFechaIngreso()))
            .satisfies(a -> assertThat(a.getObservaciones()).as("check observaciones").isEqualTo(expected.getObservaciones()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecepcionistaUpdatableRelationshipsEquals(Recepcionista expected, Recepcionista actual) {
        assertThat(actual)
            .as("Verify Recepcionista relationships")
            .satisfies(a -> assertThat(a.getSucursal()).as("check sucursal").isEqualTo(expected.getSucursal()));
    }
}
