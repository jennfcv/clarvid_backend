package com.paqueteria.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PersonaPaqueteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonaPaqueteAllPropertiesEquals(PersonaPaquete expected, PersonaPaquete actual) {
        assertPersonaPaqueteAutoGeneratedPropertiesEquals(expected, actual);
        assertPersonaPaqueteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonaPaqueteAllUpdatablePropertiesEquals(PersonaPaquete expected, PersonaPaquete actual) {
        assertPersonaPaqueteUpdatableFieldsEquals(expected, actual);
        assertPersonaPaqueteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonaPaqueteAutoGeneratedPropertiesEquals(PersonaPaquete expected, PersonaPaquete actual) {
        assertThat(actual)
            .as("Verify PersonaPaquete auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonaPaqueteUpdatableFieldsEquals(PersonaPaquete expected, PersonaPaquete actual) {
        assertThat(actual)
            .as("Verify PersonaPaquete relevant properties")
            .satisfies(a -> assertThat(a.getCi()).as("check ci").isEqualTo(expected.getCi()))
            .satisfies(a -> assertThat(a.getNombre()).as("check nombre").isEqualTo(expected.getNombre()))
            .satisfies(a -> assertThat(a.getTelefono()).as("check telefono").isEqualTo(expected.getTelefono()))
            .satisfies(a -> assertThat(a.getDireccion()).as("check direccion").isEqualTo(expected.getDireccion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonaPaqueteUpdatableRelationshipsEquals(PersonaPaquete expected, PersonaPaquete actual) {
        // empty method
    }
}
